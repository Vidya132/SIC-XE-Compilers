<SINGLE LINE COMMENT, 48,  A Void function>
<KEYWORD, 16, void>
<IDENTIFIER, 17, Test>
<IDENTIFIER, 25, (>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<KEYWORD, 14, int>
<IDENTIFIER, 17, temp>
<IDENTIFIER, 46, =>
<IDENTIFIER, 18, 4>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 15, return>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<IDENTIFIER, 50, 
>
<SINGLE LINE COMMENT, 48,  Main function>
<KEYWORD, 14, int>
<IDENTIFIER, 17, main>
<IDENTIFIER, 25, (>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<KEYWORD, 10, char>
 <IDENTIFIER, 17, emp>
<IDENTIFIER, 46, =>
<IDENTIFIER, 20, "">
<IDENTIFIER, 45, ;>
<SINGLE LINE COMMENT, 48,  assigning a empty string>
<KEYWORD, 10, char>
 <IDENTIFIER, 17, camel>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 14, int>
<IDENTIFIER, 18, 1>
<IDENTIFIER, 17, n2>
<IDENTIFIER, 45, ;>
<SINGLE LINE COMMENT, 48, 1n2 can't be taken as an identifier,So our program considers 1 as an integer constant and n2 as an identifier>
<KEYWORD, 14, int>
<IDENTIFIER, 17, IHTU>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<MULTI LINE COMMENT, 49, This is 
    Multi line comment>
<IDENTIFIER, 50, 
>
<KEYWORD, 14, int>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 18, 55>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 45, ;>
<SINGLE LINE COMMENT, 48,  Declaring an array>
<KEYWORD, 14, int>
<IDENTIFIER, 17, S>
<IDENTIFIER, 47, ,>
<IDENTIFIER, 17, m>
<IDENTIFIER, 47, ,>
<IDENTIFIER, 17, i>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 14, int>
<IDENTIFIER, 17, A1>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 14, int>
<IDENTIFIER, 17, p>
<IDENTIFIER, 47, ,>
<IDENTIFIER, 17, q>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, S>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, i>
<IDENTIFIER, 31, *>
<IDENTIFIER, 17, A1>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, S>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, m>
<IDENTIFIER, 32, />
<IDENTIFIER, 17, A1>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 10, char>
 <IDENTIFIER, 17, Oscar>
<IDENTIFIER, 46, =>
<IDENTIFIER, 19, 'Naatu_Naatu\"In Quotes\"'>
<IDENTIFIER, 45, ;>
<SINGLE LINE COMMENT, 48, string with escape sequence>
<KEYWORD, 10, char>
 <IDENTIFIER, 17, string>
<IDENTIFIER, 21, [>
<IDENTIFIER, 18, 11>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 46, =>
<IDENTIFIER, 20, "\'IPLL!!!!!!!\'">
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, p>
<IDENTIFIER, 46, =>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, q>
<IDENTIFIER, 46, =>
<IDENTIFIER, 18, 100>
<IDENTIFIER, 26, )>
<IDENTIFIER, 43, ?>
<IDENTIFIER, 18, 1>
<IDENTIFIER, 44, :>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, printstring>
<IDENTIFIER, 25, (>
<IDENTIFIER, 20, "Max of: ">
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, printInt>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 12, for>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, i>
<IDENTIFIER, 46, =>
<IDENTIFIER, 18, 1>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 17, i>
<IDENTIFIER, 37, <>
<IDENTIFIER, 17, n>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 17, i>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, i>
<IDENTIFIER, 29, +>
<IDENTIFIER, 18, 1>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, printstring>
<IDENTIFIER, 25, (>
<IDENTIFIER, 20, ", ">
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 17, printInt>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 17, i>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, printstring>
<IDENTIFIER, 25, (>
<IDENTIFIER, 20, ": = ">
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, printInt>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, S>
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 10, char>
 <IDENTIFIER, 17, string>
<IDENTIFIER, 21, [>
<IDENTIFIER, 18, 2>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 46, =>
<IDENTIFIER, 23, {>
<IDENTIFIER, 19, 'a'>
<IDENTIFIER, 47, ,>
<IDENTIFIER, 19, 'b'>
<IDENTIFIER, 24, }>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, readInt>
<IDENTIFIER, 25, (>
<IDENTIFIER, 28, &>
<IDENTIFIER, 17, n>
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 12, for>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, i>
<IDENTIFIER, 46, =>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 17, i>
<IDENTIFIER, 37, <>
<IDENTIFIER, 17, n>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 17, i>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, i>
<IDENTIFIER, 29, +>
<IDENTIFIER, 18, 1>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, readInt>
<IDENTIFIER, 25, (>
<IDENTIFIER, 28, &>
<IDENTIFIER, 17, S>
<IDENTIFIER, 26, )>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 17, i>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, S>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, m>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<KEYWORD, 12, for>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, i>
<IDENTIFIER, 46, =>
<IDENTIFIER, 18, 1>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 17, i>
<IDENTIFIER, 37, <>
<IDENTIFIER, 17, n>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 17, i>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, i>
<IDENTIFIER, 29, +>
<IDENTIFIER, 18, 1>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<KEYWORD, 13, if>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 17, i>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 38, >>
<IDENTIFIER, 17, m>
<IDENTIFIER, 26, )>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 17, m>
<IDENTIFIER, 46, =>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 17, i>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<IDENTIFIER, 50, 
>
<KEYWORD, 13, if>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, S>
<IDENTIFIER, 41, ==>
<IDENTIFIER, 17, A1>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<KEYWORD, 15, return>
<IDENTIFIER, 17, A1>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<KEYWORD, 11, else>
<KEYWORD, 13, if>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, S>
<IDENTIFIER, 39, <=>
<IDENTIFIER, 17, i>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<KEYWORD, 15, return>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 18, 15>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<KEYWORD, 11, else>
<KEYWORD, 13, if>
<IDENTIFIER, 25, (>
<IDENTIFIER, 17, S>
<IDENTIFIER, 40, >=>
<IDENTIFIER, 17, i>
<IDENTIFIER, 26, )>
<IDENTIFIER, 23, {>
<IDENTIFIER, 50, 
>
<KEYWORD, 15, return>
<IDENTIFIER, 17, Array>
<IDENTIFIER, 21, [>
<IDENTIFIER, 18, 16>
<IDENTIFIER, 22, ]>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 50, 
>
<KEYWORD, 15, return>
<IDENTIFIER, 45, ;>
<IDENTIFIER, 50, 
>
<IDENTIFIER, 24, }>
<IDENTIFIER, 50, 
>
